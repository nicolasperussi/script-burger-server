// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  orders    Order[]
  addresses Address[]
}

model Address {
  id     String @id @default(uuid())
  cep    String
  street String
  number String

  users  User[]
  orders Order[]
}

model Product {
  id          String @id @default(uuid())
  name        String
  slug        String
  description String
  overview    String
  price       Float

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String

  OrderProduct OrderProduct[]
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Order {
  id          String         @id @default(uuid())
  status      OrderStatus    @default(WAITING)
  createdAt   DateTime       @default(now())
  productList OrderProduct[]
  totalPrice  Float
  type        OrderType      @default(DINE_IN)

  client    String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?
}

model OrderProduct {
  id String @id @default(uuid())

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  quantity Int @default(1)

  Order   Order?  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId String?
}

enum OrderType {
  DINE_IN
  DELIVERY
}

enum OrderStatus {
  WAITING
  IN_PRODUCTION
  IN_TRANSIT
  DONE
}
